import java.util.ArrayList;

public class StockMediator implements Mediator {

	private ArrayList<Colleague> colleagues;
	private ArrayList<StockOffer> stockBuyOffer;
	private ArrayList<StockOffer> stockSaleOffer;
	
	private int colleagueCodes = 0;
	
	public StockMediator() {
		
		colleagues = new ArrayList<Colleague>();
		stockBuyOffer = new ArrayList<StockOffer>();
		stockSaleOffer = new ArrayList<StockOffer>();
	}

	public void addColleague(Colleague newColleague) {
	
		colleagues.add(newColleague);
		colleagueCodes++;
		newColleague.setCollCode(colleagueCodes);
	}	
	
	public void saleOffer(String stock, int shares, int collCode) {

		boolean stockSold = false;
		
		for (StockOffer offer : stockBuyOffer) {
			
			if ((offer.getStockSymbol() == stock) && (offer.getStockShares() == shares)) {
				
				System.out.println(shares + " shares of " + stock + " sold to colleague code " + offer.getCollCode());
				
				stockBuyOffer.remove(offer);
				stockSold = true;
			}
			
			if (stockSold) { break; }
		}
			
		if (!stockSold) {
				
				System.out.println(shares + " share of " + stock + " add to inventory");
				
				StockOffer newOffering = new StockOffer(shares, stock, collCode);
				stockSaleOffer.add(newOffering);
			}
		}
	

	public void buyOffer(String stock, int shares, int collCode) {
		
		boolean stockBought = false;
		
		for (StockOffer offer : stockSaleOffer) {
			
			if ((offer.getStockSymbol() == stock) && (offer.getStockShares() == shares)) {
				
				System.out.println(shares + " shares of " + stock + " bought by colleague code " + offer.getCollCode());
				
				stockSaleOffer.remove(offer);
				stockBought = true;
			}
			
			if (stockBought) { break; }
		}
	
		if (!stockBought) {
			
			System.out.println(shares + " share of " + stock + " add to inventory");
			
			StockOffer newOffering = new StockOffer(shares, stock, collCode);
			stockBuyOffer.add(newOffering);
		}
	}		
	
	public void getStockOfferings() {
		
		System.out.println("\nStocks for Sale");
		
		for (StockOffer offer : stockSaleOffer) {
			
			System.out.println(offer.getStockShares() + " of " + offer.getStockSymbol());	
		}
		
		System.out.println("\nStocks Buy Offers");
		
		for (StockOffer offer : stockBuyOffer) {
			
			System.out.println(offer.getStockShares() + " of " + offer.getStockSymbol());	
		}
	}
}
