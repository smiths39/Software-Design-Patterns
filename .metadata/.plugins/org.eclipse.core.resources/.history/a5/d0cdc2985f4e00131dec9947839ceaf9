import java.lang.reflect.*;

import javax.swing.*;

public class MeasurementsConversion {

	public static void main(String [] args) {

		/*
		 * Create pop up window that asks for a question
		 */
		JFrame frame = new JFrame();
		String questionAsked = JOptionPane.showInputDialog(frame, "What is your Question");
		
		/*
		 * Add the question to the context for analysis
		 */
		ConversionContext question = new ConversionContext(questionAsked);
	
		String fromConversion = question.getFromConversion();
		String toConversion = question.getToConversion();
		double quantity = question.getQuantity();
		
		try {
			/*
			 * Get class based on the from conversion string
			 */
			Class tempClass = Class.forName(fromConversion);
			
			/*
			 * Get the constructor dynamically for the conversion string
			 */
			Constructor con = tempClass.getConstructor();
			
			/*
			 * Create a new instance of the object you want to convert from
			 */
			Object convertFrom = (Expression) con.newInstance();
	
			Class[] methodParams = new Class[] { Double.TYPE };
			
			Method conversionMethod = tempClass.getMethod(toConversion, methodParams);
			
			Object [] params = new Object[] { new Double(quantity) };
	
			String toQuantity = (String) conversionMethod.invoke(convertFrom, params);
			String answerToQues = question.getResponse() + toQuantity + " " + toConversion;
			
			JOptionPane.showMessageDialog(null, answerToQues);
			
			frame.dispose();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (NoSuchMethodException e) {
			e.printStackTrace();
		} catch (SecurityException e) {
			e.printStackTrace();
		} catch (InstantiationException e) {
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			e.printStackTrace();
		} catch (IllegalArgumentException e) {
			e.printStackTrace();
		} catch (InvocationTargetException e) { 
			e.printStackTrace();
		}
	}
}
